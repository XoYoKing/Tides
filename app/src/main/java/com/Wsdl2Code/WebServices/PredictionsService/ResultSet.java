package com.Wsdl2Code.WebServices.PredictionsService;

//------------------------------------------------------------------------------
// <wsdl2code-generated>
//    This code was generated by http://www.wsdl2code.com version  2.6
//
// Date Of Creation: 10/19/2017 10:20:46 PM
//    Please dont change this code, regeneration will override your changes
//</wsdl2code-generated>
//
//------------------------------------------------------------------------------
//
//This source code was auto-generated by Wsdl2Code  Version
//

import com.Wsdl2Code.WebServices.PredictionsService.BoundaryDate;
import com.Wsdl2Code.WebServices.PredictionsService.BoundaryDepth;
import com.Wsdl2Code.WebServices.PredictionsService.BoundarySpatial;
import com.Wsdl2Code.WebServices.PredictionsService.StringBoundary;
import com.Wsdl2Code.WebServices.PredictionsService.VectorData;
import com.Wsdl2Code.WebServices.PredictionsService.VectorMetadata;
import com.Wsdl2Code.WebServices.PredictionsService.Status;

import org.ksoap2.serialization.KvmSerializable;
import org.ksoap2.serialization.PropertyInfo;

import java.util.Hashtable;
import java.util.Vector;

import org.ksoap2.serialization.SoapObject;
import org.ksoap2.serialization.SoapPrimitive;

public class ResultSet implements KvmSerializable {

    public BoundaryDate boundaryDate;
    public BoundaryDepth boundaryDepth;
    public BoundarySpatial boundarySpatial;
    public StringBoundary boundaryValue;
    public VectorData data;
    public VectorMetadata metadata;
    public int size;
    public Status status;

    public ResultSet() {
    }

    public ResultSet(SoapObject soapObject) {
        if (soapObject == null)
            return;
        if (soapObject.hasProperty("boundaryDate")) {
            SoapObject j = (SoapObject) soapObject.getProperty("boundaryDate");
            boundaryDate = new BoundaryDate(j);

        }
        if (soapObject.hasProperty("boundaryDepth")) {
            SoapObject j = (SoapObject) soapObject.getProperty("boundaryDepth");
            boundaryDepth = new BoundaryDepth(j);

        }
        if (soapObject.hasProperty("boundarySpatial")) {
            SoapObject j = (SoapObject) soapObject.getProperty("boundarySpatial");
            boundarySpatial = new BoundarySpatial(j);

        }
        if (soapObject.hasProperty("boundaryValue")) {
            SoapObject j = (SoapObject) soapObject.getProperty("boundaryValue");
            boundaryValue = new StringBoundary(j);

        }
        if (soapObject.hasProperty("data")) {
            Vector<SoapObject> j = (Vector<SoapObject>) soapObject.getProperty("data");
            data = new VectorData(j);
        }
        if (soapObject.hasProperty("metadata")) {
            Vector<SoapObject> j = (Vector<SoapObject>) soapObject.getProperty("metadata");
            metadata = new VectorMetadata(j);
        }
        if (soapObject.hasProperty("size")) {
            Object obj = soapObject.getProperty("size");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)) {
                SoapPrimitive j = (SoapPrimitive) obj;
                size = Integer.parseInt(j.toString());
            } else if (obj != null && obj instanceof Number) {
                size = (Integer) obj;
            }
        }
        if (soapObject.hasProperty("status")) {
            SoapObject j = (SoapObject) soapObject.getProperty("status");
            status = new Status(j);

        }
    }

    @Override
    public Object getProperty(int arg0) {
        switch (arg0) {
            case 0:
                return boundaryDate;
            case 1:
                return boundaryDepth;
            case 2:
                return boundarySpatial;
            case 3:
                return boundaryValue;
            case 4:
                return data;
            case 5:
                return metadata;
            case 6:
                return size;
            case 7:
                return status;
        }
        return null;
    }

    @Override
    public int getPropertyCount() {
        return 8;
    }

    @Override
    public void getPropertyInfo(int index, @SuppressWarnings("rawtypes") Hashtable arg1, PropertyInfo info) {
        switch (index) {
            case 0:
                info.type = BoundaryDate.class;
                info.name = "boundaryDate";
                break;
            case 1:
                info.type = BoundaryDepth.class;
                info.name = "boundaryDepth";
                break;
            case 2:
                info.type = BoundarySpatial.class;
                info.name = "boundarySpatial";
                break;
            case 3:
                info.type = StringBoundary.class;
                info.name = "boundaryValue";
                break;
            case 4:
                info.type = PropertyInfo.VECTOR_CLASS;
                info.name = "data";
                break;
            case 5:
                info.type = PropertyInfo.VECTOR_CLASS;
                info.name = "metadata";
                break;
            case 6:
                info.type = PropertyInfo.INTEGER_CLASS;
                info.name = "size";
                break;
            case 7:
                info.type = Status.class;
                info.name = "status";
                break;
        }
    }

    //    @Override
    public String getInnerText() {
        return null;
    }


    //    @Override
    public void setInnerText(String s) {
    }


    @Override
    public void setProperty(int arg0, Object arg1) {
    }

}
